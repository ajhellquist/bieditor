{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  code,\n  setCode,\n  variables,\n  selectedPID\n}) {\n  _s();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n\n  // Helper function to get color based on variable type\n  const getVariableColor = type => {\n    switch (type) {\n      case 'Metric':\n        return '#4CAF50';\n      // green\n      case 'Attribute':\n        return '#9C27B0';\n      // purple\n      case 'Attribute Value':\n        return '#FF9800';\n      // orange\n      default:\n        return 'black';\n    }\n  };\n\n  // Helper function to get variable reference\n  const getVariableReference = variable => {\n    if (!selectedPID) return '';\n    const baseRef = `[/gdc/md/${selectedPID.pid}/obj/${variable._id}`;\n    if (variable.type === 'Attribute Value') {\n      return `${baseRef}/elements?id=${variable.elementId}]`;\n    }\n    return `${baseRef}]`;\n  };\n  useEffect(() => {\n    const filtered = variables.filter(v => v.name.toLowerCase().includes(currentWord.toLowerCase()));\n    setFilteredSuggestions(filtered);\n    setSelectedIndex(0);\n  }, [currentWord, variables]);\n  const handleInputChange = e => {\n    setCode(e.target.value);\n    const position = e.target.selectionStart;\n    setCursorPosition(position);\n    const textBeforeCursor = e.target.value.substring(0, position);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const currentTypedWord = wordMatch ? wordMatch[0] : '';\n    setCurrentWord(currentTypedWord);\n    setShowSuggestions(currentTypedWord.length > 0);\n  };\n  const insertSuggestion = variable => {\n    const textBeforeCursor = code.substring(0, cursorPosition);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? cursorPosition - wordMatch[0].length : cursorPosition;\n\n    // Create a new span element with the appropriate styling\n    const variableRef = getVariableReference(variable);\n    const styledSpan = `<span style=\"color: ${getVariableColor(variable.type)}\" data-reference=\"${variableRef}\">${variable.name}</span>`;\n    const newCode = code.substring(0, startPos) + styledSpan + code.substring(cursorPosition);\n    setCode(newCode);\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      contentEditable: true,\n      onInput: handleInputChange,\n      dangerouslySetInnerHTML: {\n        __html: code\n      },\n      style: {\n        border: '1px solid #ccc',\n        minHeight: '200px',\n        padding: '10px',\n        whiteSpace: 'pre-wrap'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), showSuggestions && filteredSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: 0,\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        maxHeight: '200px',\n        overflowY: 'auto',\n        width: '200px',\n        zIndex: 1000\n      },\n      children: filteredSuggestions.map((variable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => insertSuggestion(variable),\n        style: {\n          padding: '5px 10px',\n          cursor: 'pointer',\n          backgroundColor: index === selectedIndex ? '#f0f0f0' : 'white',\n          color: getVariableColor(variable.type)\n        },\n        children: variable.name\n      }, variable._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"grJBYZNZjZdx8x6gCCSyiu9p70I=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CodeEditor","code","setCode","variables","selectedPID","_s","showSuggestions","setShowSuggestions","cursorPosition","setCursorPosition","currentWord","setCurrentWord","selectedIndex","setSelectedIndex","filteredSuggestions","setFilteredSuggestions","getVariableColor","type","getVariableReference","variable","baseRef","pid","_id","elementId","filtered","filter","v","name","toLowerCase","includes","handleInputChange","e","target","value","position","selectionStart","textBeforeCursor","substring","wordMatch","match","currentTypedWord","length","insertSuggestion","startPos","variableRef","styledSpan","newCode","style","children","contentEditable","onInput","dangerouslySetInnerHTML","__html","border","minHeight","padding","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor","maxHeight","overflowY","width","zIndex","map","index","onClick","cursor","color","_c","$RefreshReg$"],"sources":["/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function CodeEditor({ code, setCode, variables, selectedPID }) {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n\n  // Helper function to get color based on variable type\n  const getVariableColor = (type) => {\n    switch (type) {\n      case 'Metric':\n        return '#4CAF50'; // green\n      case 'Attribute':\n        return '#9C27B0'; // purple\n      case 'Attribute Value':\n        return '#FF9800'; // orange\n      default:\n        return 'black';\n    }\n  };\n\n  // Helper function to get variable reference\n  const getVariableReference = (variable) => {\n    if (!selectedPID) return '';\n    \n    const baseRef = `[/gdc/md/${selectedPID.pid}/obj/${variable._id}`;\n    \n    if (variable.type === 'Attribute Value') {\n      return `${baseRef}/elements?id=${variable.elementId}]`;\n    }\n    \n    return `${baseRef}]`;\n  };\n\n  useEffect(() => {\n    const filtered = variables.filter(v => \n      v.name.toLowerCase().includes(currentWord.toLowerCase())\n    );\n    setFilteredSuggestions(filtered);\n    setSelectedIndex(0);\n  }, [currentWord, variables]);\n\n  const handleInputChange = (e) => {\n    setCode(e.target.value);\n    const position = e.target.selectionStart;\n    setCursorPosition(position);\n\n    const textBeforeCursor = e.target.value.substring(0, position);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const currentTypedWord = wordMatch ? wordMatch[0] : '';\n    setCurrentWord(currentTypedWord);\n    setShowSuggestions(currentTypedWord.length > 0);\n  };\n\n  const insertSuggestion = (variable) => {\n    const textBeforeCursor = code.substring(0, cursorPosition);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? cursorPosition - wordMatch[0].length : cursorPosition;\n    \n    // Create a new span element with the appropriate styling\n    const variableRef = getVariableReference(variable);\n    const styledSpan = `<span style=\"color: ${getVariableColor(variable.type)}\" data-reference=\"${variableRef}\">${variable.name}</span>`;\n    \n    const newCode = code.substring(0, startPos) + \n                    styledSpan + \n                    code.substring(cursorPosition);\n    setCode(newCode);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div \n        contentEditable={true}\n        onInput={handleInputChange}\n        dangerouslySetInnerHTML={{ __html: code }}\n        style={{\n          border: '1px solid #ccc',\n          minHeight: '200px',\n          padding: '10px',\n          whiteSpace: 'pre-wrap'\n        }}\n      />\n      \n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <div style={{\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          maxHeight: '200px',\n          overflowY: 'auto',\n          width: '200px',\n          zIndex: 1000\n        }}>\n          {filteredSuggestions.map((variable, index) => (\n            <div\n              key={variable._id}\n              onClick={() => insertSuggestion(variable)}\n              style={{\n                padding: '5px 10px',\n                cursor: 'pointer',\n                backgroundColor: index === selectedIndex ? '#f0f0f0' : 'white',\n                color: getVariableColor(variable.type)\n              }}\n            >\n              {variable.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}