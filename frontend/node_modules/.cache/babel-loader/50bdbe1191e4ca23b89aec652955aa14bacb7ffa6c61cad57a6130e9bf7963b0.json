{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  code,\n  setCode,\n  variables\n}) {\n  _s();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const handleInputChange = e => {\n    setCode(e.target.value);\n    const position = e.target.selectionStart;\n    setCursorPosition(position);\n\n    // Get the word being typed\n    const textBeforeCursor = e.target.value.substring(0, position);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const currentTypedWord = wordMatch ? wordMatch[0] : '';\n    setCurrentWord(currentTypedWord);\n    setShowSuggestions(currentTypedWord.length > 0);\n  };\n  const handleSuggestionClick = variableName => {\n    const textBeforeCursor = code.substring(0, cursorPosition);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? cursorPosition - wordMatch[0].length : cursorPosition;\n    const newCode = code.substring(0, startPos) + variableName + code.substring(cursorPosition);\n    setCode(newCode);\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: handleInputChange,\n      style: {\n        width: '100%',\n        height: '80vh',\n        padding: '10px',\n        fontFamily: 'monospace',\n        fontSize: '14px',\n        lineHeight: '1.5',\n        resize: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        maxHeight: '200px',\n        overflowY: 'auto',\n        zIndex: 1000\n      },\n      children: variables.filter(v => v.name.toLowerCase().includes(currentWord.toLowerCase())).map(variable => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSuggestionClick(variable.name),\n        style: {\n          padding: '8px 12px',\n          cursor: 'pointer',\n          hover: {\n            backgroundColor: '#f0f0f0'\n          }\n        },\n        children: [variable.name, \" (\", variable.type, \": \", variable.value, \")\"]\n      }, variable._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"/pXtAMJ3ROTK7OvTwcZD0+ejzUM=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CodeEditor","code","setCode","variables","_s","showSuggestions","setShowSuggestions","cursorPosition","setCursorPosition","currentWord","setCurrentWord","handleInputChange","e","target","value","position","selectionStart","textBeforeCursor","substring","wordMatch","match","currentTypedWord","length","handleSuggestionClick","variableName","startPos","newCode","style","children","onChange","width","height","padding","fontFamily","fontSize","lineHeight","resize","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor","border","borderRadius","maxHeight","overflowY","zIndex","filter","v","name","toLowerCase","includes","map","variable","onClick","cursor","hover","type","_id","_c","$RefreshReg$"],"sources":["/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function CodeEditor({ code, setCode, variables }) {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n\n  const handleInputChange = (e) => {\n    setCode(e.target.value);\n    const position = e.target.selectionStart;\n    setCursorPosition(position);\n\n    // Get the word being typed\n    const textBeforeCursor = e.target.value.substring(0, position);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const currentTypedWord = wordMatch ? wordMatch[0] : '';\n    setCurrentWord(currentTypedWord);\n    setShowSuggestions(currentTypedWord.length > 0);\n  };\n\n  const handleSuggestionClick = (variableName) => {\n    const textBeforeCursor = code.substring(0, cursorPosition);\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? cursorPosition - wordMatch[0].length : cursorPosition;\n    \n    const newCode = code.substring(0, startPos) + \n                    variableName + \n                    code.substring(cursorPosition);\n    setCode(newCode);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <textarea\n        value={code}\n        onChange={handleInputChange}\n        style={{\n          width: '100%',\n          height: '80vh',\n          padding: '10px',\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          lineHeight: '1.5',\n          resize: 'none'\n        }}\n      />\n      {showSuggestions && (\n        <div style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          maxHeight: '200px',\n          overflowY: 'auto',\n          zIndex: 1000\n        }}>\n          {variables\n            .filter(v => v.name.toLowerCase().includes(currentWord.toLowerCase()))\n            .map((variable) => (\n              <div\n                key={variable._id}\n                onClick={() => handleSuggestionClick(variable.name)}\n                style={{\n                  padding: '8px 12px',\n                  cursor: 'pointer',\n                  hover: {\n                    backgroundColor: '#f0f0f0'\n                  }\n                }}\n              >\n                {variable.name} ({variable.type}: {variable.value})\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}