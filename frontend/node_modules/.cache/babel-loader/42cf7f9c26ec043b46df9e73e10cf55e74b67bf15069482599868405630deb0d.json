{"ast":null,"code":"ace.define(\"ace/mode/basic_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var BasicHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control\": \"FOR|TO|NEXT|GOSUB|RETURN|IF|THEN|ELSE|GOTO|ON|WHILE|WEND|TRON|TROFF\",\n      \"entity.name\": \"Auto|Call|Chain|Clear|Close|Common|Cont|Data|MERGE|ALL|Delete|DIM|EDIT|END|ERASE|ERROR|FIELD|\" + \"GET|INPUT|KILL|LET|LIST|LLIST|LOAD|LSET|RSET|MERGE|NEW|NULL|OPEN|OUT|POKE|PRINT|PUT|RANDOMIZE|READ|\" + \"RENUM|RESTORE|RESUME|RUN|SAVE|STOP|SWAP|WAIT|WIDTH\",\n      \"keyword.operator\": \"Mod|And|Not|Or|Xor|Eqv|Imp\",\n      \"support.function\": \"ABS|ASC|ATN|CDBL|CINT|COS|CSNG|CVI|CVS|CVD|EOF|EXP|FIX|FRE|INP|INSTR|INT|LEN|LOC|LOG|LPOS|\" + \"PEEK|POS|RND|SGN|SIN|SPC|SQR|TAB|TAN|USR|VAL|VARPTR\"\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"string\",\n        regex: /\"(?:\\\\.|[^\"\\\\])*\"/\n      }, {\n        token: \"support.function\",\n        regex: /(HEX|CHR|INPUT|LEFT|MID|MKI|MKS|MKD|OCT|RIGHT|SPACE|STR|STRING)\\$/\n      }, {\n        token: \"entity.name\",\n        regex: /(?:DEF\\s(?:SEG|USR|FN[a-zA-Z]+)|LINE\\sINPUT|L?PRINT#?(?:\\sUSING)?|MID\\$|ON\\sERROR\\sGOTO|OPTION\\sBASE|WRITE#?|DATE\\$|INKEY\\$|TIME\\$)/\n      }, {\n        token: \"variable\",\n        regex: /[a-zA-Z][a-zA-Z0-9_]{0,38}[$%!#]?(?=\\s*=)/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\\\|=|\\^|\\*|\\/|\\+|\\-|<|>|-/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[([]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\)\\]]/\n      }, {\n        token: \"constant.numeric\",\n        regex: /[+-]?\\d+(\\.\\d+)?([ED][+-]?\\d+)?(?:[!#])?/\n      }, {\n        token: \"constant.numeric\",\n        //hexal, octal\n        regex: /&[HO]?[0-9A-F]+/\n      }, {\n        token: \"comment\",\n        regex: /REM\\s+.*$/\n      }, {\n        regex: \"\\\\w+\",\n        token: keywordMapper\n      }, {\n        token: \"punctiation\",\n        regex: /[,;]/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(BasicHighlightRules, TextHighlightRules);\n  exports.BasicHighlightRules = BasicHighlightRules;\n});\nace.define(\"ace/mode/folding/basic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.indentKeywords = {\n      \"tron\": 1,\n      \"while\": 1,\n      \"for\": 1,\n      \"troff\": -1,\n      \"wend\": -1,\n      \"next\": -1\n    };\n    this.foldingStartMarker = /(?:\\s|^)(tron|while|for)\\b/i;\n    this.foldingStopMarker = /(?:\\b)(troff|next|wend)\\b/i;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart || isEnd) {\n        var match = isEnd ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type === \"keyword.control\") return this.basicBlock(session, row, match.index + 2);\n        }\n      }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart && !isEnd) {\n        var match = this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type == \"keyword.control\") {\n            return \"start\";\n          }\n        }\n      }\n      if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd) return \"\";\n      var match = line.match(this.foldingStopMarker);\n      var keyword = match && match[1].toLowerCase();\n      if (this.indentKeywords[keyword]) {\n        if (session.getTokenAt(row, match.index + 2).type === \"keyword.control\") return \"end\";\n      }\n      return \"\";\n    };\n    this.basicBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword.control\") return;\n      var val = token.value.toLowerCase();\n      var stack = [val];\n      var dir = this.indentKeywords[val];\n      if (!dir) return;\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n      while (token = stream.step()) {\n        val = token.value.toLowerCase();\n        if (token.type !== \"keyword.control\" || !this.indentKeywords[val]) continue;\n        var level = dir * this.indentKeywords[val];\n        if (level > 0) {\n          stack.unshift(val);\n        } else if (level <= 0) {\n          stack.shift();\n        }\n        if (stack.length === 0) {\n          break;\n        }\n      }\n      if (!token) return null;\n      if (tokenRange) return stream.getCurrentTokenRange();\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/basic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/basic_highlight_rules\", \"ace/mode/folding/basic\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var BasicHighlightRules = require(\"./basic_highlight_rules\").BasicHighlightRules;\n  var FoldMode = require(\"./folding/basic\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = BasicHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"REM\"];\n    this.getMatching = function (session, row, column, tokenRange) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n      if (tokenRange == undefined) tokenRange = true;\n      var startToken = session.getTokenAt(row, column);\n      if (startToken) {\n        var val = startToken.value.toLowerCase();\n        if (val in this.indentKeywords) return this.foldingRules.basicBlock(session, row, column, tokenRange);\n      }\n    };\n    this.$id = \"ace/mode/basic\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/basic\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","BasicHighlightRules","keywordMapper","createKeywordMapper","$rules","token","regex","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","indentKeywords","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","exec","keyword","toLowerCase","type","getTokenAt","index","basicBlock","getFoldWidget","column","tokenRange","stream","getCurrentToken","val","value","stack","dir","startColumn","getCurrentTokenColumn","length","startRow","step","stepBackward","stepForward","level","unshift","shift","getCurrentTokenRange","getCurrentTokenRow","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getMatching","undefined","pos","selection","lead","startToken","$id","m"],"sources":["/Users/andrewhellquist/Desktop/node_modules/ace-builds/src-noconflict/mode-basic.js"],"sourcesContent":["ace.define(\"ace/mode/basic_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar BasicHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": \"FOR|TO|NEXT|GOSUB|RETURN|IF|THEN|ELSE|GOTO|ON|WHILE|WEND|TRON|TROFF\",\n        \"entity.name\": \"Auto|Call|Chain|Clear|Close|Common|Cont|Data|MERGE|ALL|Delete|DIM|EDIT|END|ERASE|ERROR|FIELD|\"\n            + \"GET|INPUT|KILL|LET|LIST|LLIST|LOAD|LSET|RSET|MERGE|NEW|NULL|OPEN|OUT|POKE|PRINT|PUT|RANDOMIZE|READ|\"\n            + \"RENUM|RESTORE|RESUME|RUN|SAVE|STOP|SWAP|WAIT|WIDTH\",\n        \"keyword.operator\": \"Mod|And|Not|Or|Xor|Eqv|Imp\",\n        \"support.function\": \"ABS|ASC|ATN|CDBL|CINT|COS|CSNG|CVI|CVS|CVD|EOF|EXP|FIX|FRE|INP|INSTR|INT|LEN|LOC|LOG|LPOS|\"\n            + \"PEEK|POS|RND|SGN|SIN|SPC|SQR|TAB|TAN|USR|VAL|VARPTR\"\n    }, \"identifier\", true);\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"string\",\n                regex: /\"(?:\\\\.|[^\"\\\\])*\"/\n            },\n            {\n                token: \"support.function\",\n                regex: /(HEX|CHR|INPUT|LEFT|MID|MKI|MKS|MKD|OCT|RIGHT|SPACE|STR|STRING)\\$/\n            }, {\n                token: \"entity.name\",\n                regex: /(?:DEF\\s(?:SEG|USR|FN[a-zA-Z]+)|LINE\\sINPUT|L?PRINT#?(?:\\sUSING)?|MID\\$|ON\\sERROR\\sGOTO|OPTION\\sBASE|WRITE#?|DATE\\$|INKEY\\$|TIME\\$)/\n            }, {\n                token: \"variable\",\n                regex: /[a-zA-Z][a-zA-Z0-9_]{0,38}[$%!#]?(?=\\s*=)/\n            }, {\n                token: \"keyword.operator\",\n                regex: /\\\\|=|\\^|\\*|\\/|\\+|\\-|<|>|-/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[([]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\)\\]]/\n            }, {\n                token: \"constant.numeric\",\n                regex: /[+-]?\\d+(\\.\\d+)?([ED][+-]?\\d+)?(?:[!#])?/\n            }, {\n                token: \"constant.numeric\", //hexal, octal\n                regex: /&[HO]?[0-9A-F]+/\n            }, {\n                token: \"comment\",\n                regex: /REM\\s+.*$/\n            }, {\n                regex: \"\\\\w+\",\n                token: keywordMapper\n            }, {\n                token: \"punctiation\",\n                regex: /[,;]/\n            }\n        ]\n    };\n    this.normalizeRules();\n};\noop.inherits(BasicHighlightRules, TextHighlightRules);\nexports.BasicHighlightRules = BasicHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/basic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.indentKeywords = {\n        \"tron\": 1,\n        \"while\": 1,\n        \"for\": 1,\n        \"troff\": -1,\n        \"wend\": -1,\n        \"next\": -1\n    };\n    this.foldingStartMarker = /(?:\\s|^)(tron|while|for)\\b/i;\n    this.foldingStopMarker = /(?:\\b)(troff|next|wend)\\b/i;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart || isEnd) {\n            var match = (isEnd) ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type === \"keyword.control\")\n                    return this.basicBlock(session, row, match.index + 2);\n            }\n        }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart && !isEnd) {\n            var match = this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type == \"keyword.control\") {\n                    return \"start\";\n                }\n            }\n        }\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\n            return \"\";\n        var match = line.match(this.foldingStopMarker);\n        var keyword = match && match[1].toLowerCase();\n        if (this.indentKeywords[keyword]) {\n            if (session.getTokenAt(row, match.index + 2).type === \"keyword.control\")\n                return \"end\";\n        }\n        return \"\";\n    };\n    this.basicBlock = function (session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"keyword.control\")\n            return;\n        var val = token.value.toLowerCase();\n        var stack = [val];\n        var dir = this.indentKeywords[val];\n        if (!dir)\n            return;\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while (token = stream.step()) {\n            val = token.value.toLowerCase();\n            if (token.type !== \"keyword.control\" || !this.indentKeywords[val])\n                continue;\n            var level = dir * this.indentKeywords[val];\n            if (level > 0) {\n                stack.unshift(val);\n            }\n            else if (level <= 0) {\n                stack.shift();\n            }\n            if (stack.length === 0) {\n                break;\n            }\n        }\n        if (!token)\n            return null;\n        if (tokenRange)\n            return stream.getCurrentTokenRange();\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/basic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/basic_highlight_rules\",\"ace/mode/folding/basic\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar BasicHighlightRules = require(\"./basic_highlight_rules\").BasicHighlightRules;\nvar FoldMode = require(\"./folding/basic\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = BasicHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = [\"REM\"];\n    this.getMatching = function (session, row, column, tokenRange) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        if (tokenRange == undefined)\n            tokenRange = true;\n        var startToken = session.getTokenAt(row, column);\n        if (startToken) {\n            var val = startToken.value.toLowerCase();\n            if (val in this.indentKeywords)\n                return this.foldingRules.basicBlock(session, row, column, tokenRange);\n        }\n    };\n    this.$id = \"ace/mode/basic\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/basic\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"AAAAA,GAAG,CAACC,MAAM,CAAC,gCAAgC,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,+BAA+B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EACzK,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,wBAAwB,CAAC,CAACI,kBAAkB;EAC7E,IAAIC,mBAAmB,GAAG,SAAAA,CAAA,EAAY;IAClC,IAAIC,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC;MACzC,iBAAiB,EAAE,qEAAqE;MACxF,aAAa,EAAE,+FAA+F,GACxG,qGAAqG,GACrG,oDAAoD;MAC1D,kBAAkB,EAAE,4BAA4B;MAChD,kBAAkB,EAAE,4FAA4F,GAC1G;IACV,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC;IACtB,IAAI,CAACC,MAAM,GAAG;MACV,OAAO,EAAE,CACL;QACIC,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,kBAAkB;QACzBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,UAAU;QACjBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,kBAAkB;QACzBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,kBAAkB;QACzBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,kBAAkB;QAAE;QAC3BC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCA,KAAK,EAAE,MAAM;QACbD,KAAK,EAAEH;MACX,CAAC,EAAE;QACCG,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE;MACX,CAAC;IAET,CAAC;IACD,IAAI,CAACC,cAAc,CAAC,CAAC;EACzB,CAAC;EACDR,GAAG,CAACS,QAAQ,CAACP,mBAAmB,EAAED,kBAAkB,CAAC;EACrDH,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AAEjD,CAAC,CAAC;AAEFP,GAAG,CAACC,MAAM,CAAC,wBAAwB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,4BAA4B,EAAC,WAAW,EAAC,oBAAoB,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAC/L,IAAIC,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;EAClC,IAAIa,YAAY,GAAGb,OAAO,CAAC,aAAa,CAAC,CAACc,QAAQ;EAClD,IAAIC,KAAK,GAAGf,OAAO,CAAC,aAAa,CAAC,CAACe,KAAK;EACxC,IAAIC,aAAa,GAAGhB,OAAO,CAAC,sBAAsB,CAAC,CAACgB,aAAa;EACjE,IAAIF,QAAQ,GAAGb,OAAO,CAACa,QAAQ,GAAG,YAAY,CAAE,CAAC;EACjDX,GAAG,CAACS,QAAQ,CAACE,QAAQ,EAAED,YAAY,CAAC;EACpC,CAAC,YAAY;IACT,IAAI,CAACI,cAAc,GAAG;MAClB,MAAM,EAAE,CAAC;MACT,OAAO,EAAE,CAAC;MACV,KAAK,EAAE,CAAC;MACR,OAAO,EAAE,CAAC,CAAC;MACX,MAAM,EAAE,CAAC,CAAC;MACV,MAAM,EAAE,CAAC;IACb,CAAC;IACD,IAAI,CAACC,kBAAkB,GAAG,6BAA6B;IACvD,IAAI,CAACC,iBAAiB,GAAG,4BAA4B;IACrD,IAAI,CAACC,kBAAkB,GAAG,UAAUC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAE;MACzD,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAIG,OAAO,GAAG,IAAI,CAACR,kBAAkB,CAACS,IAAI,CAACH,IAAI,CAAC;MAChD,IAAII,KAAK,GAAG,IAAI,CAACT,iBAAiB,CAACQ,IAAI,CAACH,IAAI,CAAC;MAC7C,IAAIE,OAAO,IAAIE,KAAK,EAAE;QAClB,IAAIC,KAAK,GAAID,KAAK,GAAI,IAAI,CAACT,iBAAiB,CAACW,IAAI,CAACN,IAAI,CAAC,GAAG,IAAI,CAACN,kBAAkB,CAACY,IAAI,CAACN,IAAI,CAAC;QAC5F,IAAIO,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QAC7C,IAAID,OAAO,EAAE;UACT,IAAIE,IAAI,GAAGZ,OAAO,CAACa,UAAU,CAACX,GAAG,EAAEM,KAAK,CAACM,KAAK,GAAG,CAAC,CAAC,CAACF,IAAI;UACxD,IAAIA,IAAI,KAAK,iBAAiB,EAC1B,OAAO,IAAI,CAACG,UAAU,CAACf,OAAO,EAAEE,GAAG,EAAEM,KAAK,CAACM,KAAK,GAAG,CAAC,CAAC;QAC7D;MACJ;IACJ,CAAC;IACD,IAAI,CAACE,aAAa,GAAG,UAAUhB,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAE;MACpD,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAIG,OAAO,GAAG,IAAI,CAACR,kBAAkB,CAACS,IAAI,CAACH,IAAI,CAAC;MAChD,IAAII,KAAK,GAAG,IAAI,CAACT,iBAAiB,CAACQ,IAAI,CAACH,IAAI,CAAC;MAC7C,IAAIE,OAAO,IAAI,CAACE,KAAK,EAAE;QACnB,IAAIC,KAAK,GAAG,IAAI,CAACX,kBAAkB,CAACY,IAAI,CAACN,IAAI,CAAC;QAC9C,IAAIO,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QAC7C,IAAID,OAAO,EAAE;UACT,IAAIE,IAAI,GAAGZ,OAAO,CAACa,UAAU,CAACX,GAAG,EAAEM,KAAK,CAACM,KAAK,GAAG,CAAC,CAAC,CAACF,IAAI;UACxD,IAAIA,IAAI,IAAI,iBAAiB,EAAE;YAC3B,OAAO,OAAO;UAClB;QACJ;MACJ;MACA,IAAIX,SAAS,IAAI,cAAc,IAAI,CAACM,KAAK,IAAIF,OAAO,IAAIE,KAAK,EACzD,OAAO,EAAE;MACb,IAAIC,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC,IAAI,CAACV,iBAAiB,CAAC;MAC9C,IAAIY,OAAO,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;MAC7C,IAAI,IAAI,CAACf,cAAc,CAACc,OAAO,CAAC,EAAE;QAC9B,IAAIV,OAAO,CAACa,UAAU,CAACX,GAAG,EAAEM,KAAK,CAACM,KAAK,GAAG,CAAC,CAAC,CAACF,IAAI,KAAK,iBAAiB,EACnE,OAAO,KAAK;MACpB;MACA,OAAO,EAAE;IACb,CAAC;IACD,IAAI,CAACG,UAAU,GAAG,UAAUf,OAAO,EAAEE,GAAG,EAAEe,MAAM,EAAEC,UAAU,EAAE;MAC1D,IAAIC,MAAM,GAAG,IAAIxB,aAAa,CAACK,OAAO,EAAEE,GAAG,EAAEe,MAAM,CAAC;MACpD,IAAI7B,KAAK,GAAG+B,MAAM,CAACC,eAAe,CAAC,CAAC;MACpC,IAAI,CAAChC,KAAK,IAAIA,KAAK,CAACwB,IAAI,IAAI,iBAAiB,EACzC;MACJ,IAAIS,GAAG,GAAGjC,KAAK,CAACkC,KAAK,CAACX,WAAW,CAAC,CAAC;MACnC,IAAIY,KAAK,GAAG,CAACF,GAAG,CAAC;MACjB,IAAIG,GAAG,GAAG,IAAI,CAAC5B,cAAc,CAACyB,GAAG,CAAC;MAClC,IAAI,CAACG,GAAG,EACJ;MACJ,IAAIC,WAAW,GAAGD,GAAG,KAAK,CAAC,CAAC,GAAGL,MAAM,CAACO,qBAAqB,CAAC,CAAC,GAAG1B,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC,CAACyB,MAAM;MAC3F,IAAIC,QAAQ,GAAG1B,GAAG;MAClBiB,MAAM,CAACU,IAAI,GAAGL,GAAG,KAAK,CAAC,CAAC,GAAGL,MAAM,CAACW,YAAY,GAAGX,MAAM,CAACY,WAAW;MACnE,OAAO3C,KAAK,GAAG+B,MAAM,CAACU,IAAI,CAAC,CAAC,EAAE;QAC1BR,GAAG,GAAGjC,KAAK,CAACkC,KAAK,CAACX,WAAW,CAAC,CAAC;QAC/B,IAAIvB,KAAK,CAACwB,IAAI,KAAK,iBAAiB,IAAI,CAAC,IAAI,CAAChB,cAAc,CAACyB,GAAG,CAAC,EAC7D;QACJ,IAAIW,KAAK,GAAGR,GAAG,GAAG,IAAI,CAAC5B,cAAc,CAACyB,GAAG,CAAC;QAC1C,IAAIW,KAAK,GAAG,CAAC,EAAE;UACXT,KAAK,CAACU,OAAO,CAACZ,GAAG,CAAC;QACtB,CAAC,MACI,IAAIW,KAAK,IAAI,CAAC,EAAE;UACjBT,KAAK,CAACW,KAAK,CAAC,CAAC;QACjB;QACA,IAAIX,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;UACpB;QACJ;MACJ;MACA,IAAI,CAACvC,KAAK,EACN,OAAO,IAAI;MACf,IAAI8B,UAAU,EACV,OAAOC,MAAM,CAACgB,oBAAoB,CAAC,CAAC;MACxC,IAAIjC,GAAG,GAAGiB,MAAM,CAACiB,kBAAkB,CAAC,CAAC;MACrC,IAAIZ,GAAG,KAAK,CAAC,CAAC,EACV,OAAO,IAAI9B,KAAK,CAACQ,GAAG,EAAEF,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC,CAACyB,MAAM,EAAEC,QAAQ,EAAEH,WAAW,CAAC,CAAC,KAE1E,OAAO,IAAI/B,KAAK,CAACkC,QAAQ,EAAEH,WAAW,EAAEvB,GAAG,EAAEiB,MAAM,CAACO,qBAAqB,CAAC,CAAC,CAAC;IACpF,CAAC;EACL,CAAC,EAAEW,IAAI,CAAC5C,QAAQ,CAAC6C,SAAS,CAAC;AAE3B,CAAC,CAAC;AAEF7D,GAAG,CAACC,MAAM,CAAC,gBAAgB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,eAAe,EAAC,gCAAgC,EAAC,wBAAwB,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EACnM,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAI4D,QAAQ,GAAG5D,OAAO,CAAC,QAAQ,CAAC,CAAC6D,IAAI;EACrC,IAAIxD,mBAAmB,GAAGL,OAAO,CAAC,yBAAyB,CAAC,CAACK,mBAAmB;EAChF,IAAIS,QAAQ,GAAGd,OAAO,CAAC,iBAAiB,CAAC,CAACc,QAAQ;EAClD,IAAI+C,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACC,cAAc,GAAGzD,mBAAmB;IACzC,IAAI,CAAC0D,YAAY,GAAG,IAAIjD,QAAQ,CAAC,CAAC;IAClC,IAAI,CAACkD,UAAU,GAAG,IAAI,CAACC,iBAAiB;IACxC,IAAI,CAAChD,cAAc,GAAG,IAAI,CAAC8C,YAAY,CAAC9C,cAAc;EAC1D,CAAC;EACDd,GAAG,CAACS,QAAQ,CAACiD,IAAI,EAAED,QAAQ,CAAC;EAC5B,CAAC,YAAY;IACT,IAAI,CAACM,gBAAgB,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAI,CAACC,WAAW,GAAG,UAAU9C,OAAO,EAAEE,GAAG,EAAEe,MAAM,EAAEC,UAAU,EAAE;MAC3D,IAAIhB,GAAG,IAAI6C,SAAS,EAAE;QAClB,IAAIC,GAAG,GAAGhD,OAAO,CAACiD,SAAS,CAACC,IAAI;QAChCjC,MAAM,GAAG+B,GAAG,CAAC/B,MAAM;QACnBf,GAAG,GAAG8C,GAAG,CAAC9C,GAAG;MACjB;MACA,IAAIgB,UAAU,IAAI6B,SAAS,EACvB7B,UAAU,GAAG,IAAI;MACrB,IAAIiC,UAAU,GAAGnD,OAAO,CAACa,UAAU,CAACX,GAAG,EAAEe,MAAM,CAAC;MAChD,IAAIkC,UAAU,EAAE;QACZ,IAAI9B,GAAG,GAAG8B,UAAU,CAAC7B,KAAK,CAACX,WAAW,CAAC,CAAC;QACxC,IAAIU,GAAG,IAAI,IAAI,CAACzB,cAAc,EAC1B,OAAO,IAAI,CAAC8C,YAAY,CAAC3B,UAAU,CAACf,OAAO,EAAEE,GAAG,EAAEe,MAAM,EAAEC,UAAU,CAAC;MAC7E;IACJ,CAAC;IACD,IAAI,CAACkC,GAAG,GAAG,gBAAgB;EAC/B,CAAC,EAAEf,IAAI,CAACG,IAAI,CAACF,SAAS,CAAC;EACvB1D,OAAO,CAAC4D,IAAI,GAAGA,IAAI;AAEnB,CAAC,CAAC;AAAiB,CAAC,YAAW;EACX/D,GAAG,CAACE,OAAO,CAAC,CAAC,gBAAgB,CAAC,EAAE,UAAS0E,CAAC,EAAE;IACxC,IAAI,OAAOxE,MAAM,IAAI,QAAQ,IAAI,OAAOD,OAAO,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACnEA,MAAM,CAACD,OAAO,GAAGyE,CAAC;IACtB;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}