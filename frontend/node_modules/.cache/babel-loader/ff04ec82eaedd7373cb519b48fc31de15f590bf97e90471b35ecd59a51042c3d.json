{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  code,\n  setCode,\n  variables,\n  selectedPID\n}) {\n  _s();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const editorRef = useRef(null);\n\n  // Helper function to get color based on variable type\n  const getVariableColor = type => {\n    switch (type) {\n      case 'Metric':\n        return '#4CAF50';\n      // green\n      case 'Attribute':\n        return '#9C27B0';\n      // purple\n      case 'Attribute Value':\n        return '#FF9800';\n      // orange\n      default:\n        return 'black';\n    }\n  };\n\n  // Helper function to get variable reference\n  const getVariableReference = variable => {\n    if (!selectedPID) return '';\n    const baseRef = `[/gdc/md/${selectedPID.pid}/obj/${variable._id}`;\n    if (variable.type === 'Attribute Value') {\n      return `${baseRef}/elements?id=${variable.elementId}]`;\n    }\n    return `${baseRef}]`;\n  };\n  useEffect(() => {\n    const filtered = variables.filter(v => v.name.toLowerCase().includes(currentWord.toLowerCase()));\n    setFilteredSuggestions(filtered);\n    setSelectedIndex(0);\n  }, [currentWord, variables]);\n  const handleInputChange = e => {\n    const content = e.target.textContent || '';\n    setCode(content);\n\n    // Get cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      const preCaretRange = range.cloneRange();\n      preCaretRange.selectNodeContents(e.target);\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\n      const position = preCaretRange.toString().length;\n      setCursorPosition(position);\n\n      // Get current word\n      const textBeforeCursor = content.substring(0, position);\n      const wordMatch = textBeforeCursor.match(/\\S+$/);\n      const currentTypedWord = wordMatch ? wordMatch[0] : '';\n      setCurrentWord(currentTypedWord);\n      setShowSuggestions(currentTypedWord.length > 0);\n    }\n  };\n  const insertSuggestion = variable => {\n    const selection = window.getSelection();\n    if (!selection.rangeCount) return;\n    const range = selection.getRangeAt(0);\n    const preCaretRange = range.cloneRange();\n    preCaretRange.selectNodeContents(editorRef.current);\n    preCaretRange.setEnd(range.endContainer, range.endOffset);\n    const textBeforeCursor = preCaretRange.toString();\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? textBeforeCursor.length - wordMatch[0].length : textBeforeCursor.length;\n    const variableRef = getVariableReference(variable);\n    const styledSpan = document.createElement('span');\n    styledSpan.style.color = getVariableColor(variable.type);\n    styledSpan.setAttribute('data-reference', variableRef);\n    styledSpan.textContent = variable.name;\n\n    // Insert the styled span\n    const content = editorRef.current.textContent;\n    const beforeText = content.substring(0, startPos);\n    const afterText = content.substring(cursorPosition);\n    editorRef.current.innerHTML = beforeText;\n    editorRef.current.appendChild(styledSpan);\n    editorRef.current.innerHTML += afterText;\n\n    // Reset suggestions\n    setShowSuggestions(false);\n\n    // Update code state\n    setCode(editorRef.current.innerHTML);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      contentEditable: true,\n      onInput: handleInputChange,\n      dangerouslySetInnerHTML: {\n        __html: code\n      },\n      style: {\n        border: '1px solid #ccc',\n        minHeight: '200px',\n        padding: '10px',\n        whiteSpace: 'pre-wrap'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showSuggestions && filteredSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: 0,\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        maxHeight: '200px',\n        overflowY: 'auto',\n        width: '200px',\n        zIndex: 1000\n      },\n      children: filteredSuggestions.map((variable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => insertSuggestion(variable),\n        style: {\n          padding: '5px 10px',\n          cursor: 'pointer',\n          backgroundColor: index === selectedIndex ? '#f0f0f0' : 'white',\n          color: getVariableColor(variable.type)\n        },\n        children: variable.name\n      }, variable._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"uSHp0ioFu2Ei0ocIHmU1ezZIj6o=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CodeEditor","code","setCode","variables","selectedPID","_s","showSuggestions","setShowSuggestions","cursorPosition","setCursorPosition","currentWord","setCurrentWord","selectedIndex","setSelectedIndex","filteredSuggestions","setFilteredSuggestions","editorRef","getVariableColor","type","getVariableReference","variable","baseRef","pid","_id","elementId","filtered","filter","v","name","toLowerCase","includes","handleInputChange","e","content","target","textContent","selection","window","getSelection","rangeCount","range","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","position","toString","length","textBeforeCursor","substring","wordMatch","match","currentTypedWord","insertSuggestion","current","startPos","variableRef","styledSpan","document","createElement","style","color","setAttribute","beforeText","afterText","innerHTML","appendChild","children","ref","contentEditable","onInput","dangerouslySetInnerHTML","__html","border","minHeight","padding","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","top","left","backgroundColor","maxHeight","overflowY","width","zIndex","map","index","onClick","cursor","_c","$RefreshReg$"],"sources":["/Users/andrewhellquist/Desktop/Cursor/my-bi-editor/frontend/src/components/CodeEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function CodeEditor({ code, setCode, variables, selectedPID }) {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [currentWord, setCurrentWord] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const editorRef = useRef(null);\n\n  // Helper function to get color based on variable type\n  const getVariableColor = (type) => {\n    switch (type) {\n      case 'Metric':\n        return '#4CAF50'; // green\n      case 'Attribute':\n        return '#9C27B0'; // purple\n      case 'Attribute Value':\n        return '#FF9800'; // orange\n      default:\n        return 'black';\n    }\n  };\n\n  // Helper function to get variable reference\n  const getVariableReference = (variable) => {\n    if (!selectedPID) return '';\n    \n    const baseRef = `[/gdc/md/${selectedPID.pid}/obj/${variable._id}`;\n    \n    if (variable.type === 'Attribute Value') {\n      return `${baseRef}/elements?id=${variable.elementId}]`;\n    }\n    \n    return `${baseRef}]`;\n  };\n\n  useEffect(() => {\n    const filtered = variables.filter(v => \n      v.name.toLowerCase().includes(currentWord.toLowerCase())\n    );\n    setFilteredSuggestions(filtered);\n    setSelectedIndex(0);\n  }, [currentWord, variables]);\n\n  const handleInputChange = (e) => {\n    const content = e.target.textContent || '';\n    setCode(content);\n\n    // Get cursor position\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      const range = selection.getRangeAt(0);\n      const preCaretRange = range.cloneRange();\n      preCaretRange.selectNodeContents(e.target);\n      preCaretRange.setEnd(range.endContainer, range.endOffset);\n      const position = preCaretRange.toString().length;\n      setCursorPosition(position);\n\n      // Get current word\n      const textBeforeCursor = content.substring(0, position);\n      const wordMatch = textBeforeCursor.match(/\\S+$/);\n      const currentTypedWord = wordMatch ? wordMatch[0] : '';\n      setCurrentWord(currentTypedWord);\n      setShowSuggestions(currentTypedWord.length > 0);\n    }\n  };\n\n  const insertSuggestion = (variable) => {\n    const selection = window.getSelection();\n    if (!selection.rangeCount) return;\n\n    const range = selection.getRangeAt(0);\n    const preCaretRange = range.cloneRange();\n    preCaretRange.selectNodeContents(editorRef.current);\n    preCaretRange.setEnd(range.endContainer, range.endOffset);\n    \n    const textBeforeCursor = preCaretRange.toString();\n    const wordMatch = textBeforeCursor.match(/\\S+$/);\n    const startPos = wordMatch ? textBeforeCursor.length - wordMatch[0].length : textBeforeCursor.length;\n    \n    const variableRef = getVariableReference(variable);\n    const styledSpan = document.createElement('span');\n    styledSpan.style.color = getVariableColor(variable.type);\n    styledSpan.setAttribute('data-reference', variableRef);\n    styledSpan.textContent = variable.name;\n    \n    // Insert the styled span\n    const content = editorRef.current.textContent;\n    const beforeText = content.substring(0, startPos);\n    const afterText = content.substring(cursorPosition);\n    \n    editorRef.current.innerHTML = beforeText;\n    editorRef.current.appendChild(styledSpan);\n    editorRef.current.innerHTML += afterText;\n    \n    // Reset suggestions\n    setShowSuggestions(false);\n    \n    // Update code state\n    setCode(editorRef.current.innerHTML);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div \n        ref={editorRef}\n        contentEditable={true}\n        onInput={handleInputChange}\n        dangerouslySetInnerHTML={{ __html: code }}\n        style={{\n          border: '1px solid #ccc',\n          minHeight: '200px',\n          padding: '10px',\n          whiteSpace: 'pre-wrap'\n        }}\n      />\n      \n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <div style={{\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          maxHeight: '200px',\n          overflowY: 'auto',\n          width: '200px',\n          zIndex: 1000\n        }}>\n          {filteredSuggestions.map((variable, index) => (\n            <div\n              key={variable._id}\n              onClick={() => insertSuggestion(variable)}\n              style={{\n                padding: '5px 10px',\n                cursor: 'pointer',\n                backgroundColor: index === selectedIndex ? '#f0f0f0' : 'white',\n                color: getVariableColor(variable.type)\n              }}\n            >\n              {variable.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}